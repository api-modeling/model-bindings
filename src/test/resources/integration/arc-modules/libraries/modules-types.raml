#%RAML 1.0 Library
usage: |
  To be used with modules API.
  Contains collection of types in the modules API.
types: 
  ModuleInfo:
    description: |
      This type is used in communication between ARC application and the server to informa the app
      about a module installed in the application.
    properties: 
      version:
        type: string
        description: Current version of a module
      id:
        type: string
        description: Module internal id.
  Module:
    displayName: Module
    description: Module is a base class for both ARC extensions or themes.
    type: object
    properties:
      version: Version
      name:
        required: true
        example: My module
        description: Name of the module
        type: string
      description:
        required: true
        example: Description of my package.
        description: |
          Description of the module. It is visible to the user when browsing modules.
        type: string
      repo:
        required: true
        example: 'https://github.com/org/name'
        description: URL to the repository where the source code of the module exists.
        type: string
      type:
        required: true
        example: extension
        description: Type of the module. Either `theme` or `extension`.
        type: string
        enum: [theme, extension]
      usage:
        type: string
        required: false
        description: |
          Author's usage description.
          When the package is installed it uses repo's README.md file to display the documentation.
          This can be only used when creating an extension. Themes do not need this information.
      starredByUser: 
        type: boolean
        required: false
        description: |
          This field is only available when this request came from authenticated user.
          Determines if logged in user starred the module.
  ModuleResponse:
    type: Module
    displayName: Response Module
    description: A module that is put into a response object 
    properties: 
      id:
        type: string
        description: Module ID generated by the application server when the module is published.
      created: 
        type: datetime
        description: |
          Module creation time. 
      downloads:
        type: number
        description: |
          Number of module downloads. In total for all published versions.
      stars:
        required: false
        description: |
          Number of people that starred the module.
        type: number
        default: 0
      author:
        type: Person
        description: |
          Module author information.
          This is attached to the entity during creation time by requesting information 
          about token owner.
  Person:
    displayName: Person
    type: object
    properties: 
      name:
        type: string
        description: Person full name
      website:
        required: false
        type: string
        description: Person's website, if any.
  PersonResponse:
    displayName: Person response object
    type: PersonListResponse
    description: |
      The representation of a person entity that is returned by the API.
      Because of security and privacy protection this object contains as little as possible 
      information about a person.
    properties:
      modulesCount:
        type: number
        default: 0
        description: Number of modules published by this person
      themesCount:
        type: number
        default: 0
        description: Number of themes published by this person
      github:
        type: string
        description: |
          User's github name
      modules:
        type: array
        items: ModuleResponse
        description: |
          List of packages published by the user
      themes:
        type: array
        items: ModuleResponse
        description: |
          List of themes published by the user
  PersonListResponse:
    displayName: Person list response object
    description: |
      The representation of a person entity that is returned by the API in a list.
      Because of security and privacy protection this object contains as little as possible 
      information about a person.
    properties: 
      name:
        type: string
        description: Person full name
      website:
        required: false
        type: string
        description: Person's website, if any.
      ref:
        type: string
        description: |
          A unique ID for the person so a URI can be build out of it.
  Version:
    displayName: Version
    description: |
      Information about module version
    properties: 
      arc:
        required: true
        example: '>=1.0.0 <2.0.0'
        description: |
          Contains an entry for ARC version range such as: 
          ```
          "engine": ">=1.0.0 <2.0.0"
          ```
          It can be `*` to match any version. Use npm like expression.
        type: string
      module:
        required: true
        example: 1.0.0
        description: |
          Current version of the module. It follows Semantic Versioning spec.
          Request creating a module has to have valid version number.
        type: string